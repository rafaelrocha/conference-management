buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'net.saliman:gradle-cobertura-plugin:2.2.4'
  }
}

apply plugin: 'java'
apply plugin: 'cobertura'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'

// group is the groupId
group = 'com.tw.conference'
//the default artifactId is the project name, which is per default the directory name of the project
version = '1.0.0-SNAPSHOT'

description = """Conference system to help admins to allocate talks in sessions."""

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
  mavenCentral()
}

dependencies {
  compile(
    ['com.google.guava:guava:16.0.1']
  )

  testCompile(
    ['org.testng:testng:6.8.8'],
    ['org.uncommons:reportng:1.1.4'],
    ['org.mockito:mockito-all:1.9.5'],
    ['org.easytesting:fest-assert-core:2.0M10'],
    // workaround for a known issue with TestNG 6.x: explicitly add Guice (Gradle will fail to run tests otherwise)
    ['com.google.inject:guice:3.0']
  )
}

// ensure that test resources (src/test/resources) are added to CLASSPATH;
// see http://forums.gradle.org/gradle/topics/tests_arent_executed_when_setting_the_test_runtimeclasspath and
// http://gradle.org/docs/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:classpath
sourceSets {
  main {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
  test {
    runtimeClasspath = files(output.resourcesDir) + runtimeClasspath
  }
}

test {
  useTestNG() {
    suiteXmlBuilder().suite(name: 'gradle-testng-mockito-bootstrap', parallel: 'tests') {
      test (name : 'all-tests') {
        packages {
          'package' (name: 'com.tw.conference.*')
        }
      }
    }
  }
  options {
    listeners << 'org.uncommons.reportng.HTMLReporter'
    listeners << 'org.uncommons.reportng.JUnitXMLReporter'
  }
  ext.useDefaultListeners = true
  ext.workingDirectory = 'build/'
}

// https://github.com/stevesaliman/gradle-cobertura-plugin
// http://ingorichter.blogspot.ch/2013/03/using-cobertura-with-gradle.html for list of options
cobertura {
  coverageFormats = ['xml', 'html']
}

// See http://www.gradle.org/docs/current/userguide/gradle_wrapper.html
task wrapper(type: Wrapper) {
  description = 'Install Gradle wrapper'
  gradleVersion = '1.9'
}

task(execConference, dependsOn: 'classes', type: JavaExec) {
  main = 'com.tw.conference.cmd.Console'
  classpath = sourceSets.main.runtimeClasspath
  args "$input"
}

mainClassName = "com.tw.conference.cmd.Console"
